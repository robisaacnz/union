#!/bin/bash
INPUT=./languages/English.txt

HEADER=
HEADER+="#ifndef MLANGUAGE_H\n"
HEADER+="#define MLANGUAGE_H\n"
HEADER+="// generated by generate.sh\n\n"
HEADER+="typedef struct Language {\n"

DEFAULT=
DEFAULT+="#ifndef MLANGUAGE_BASE_H\n"
DEFAULT+="#define MLANGUAGE_BASE_H\n"
DEFAULT+="// generated by generate.sh\n"
DEFAULT+="#include \"mlanguage.h\"\n\n"
DEFAULT+="Language base = {\n"

KEYS_COUNT=0
KEYS=
KEYS+="char* language_keys[kLanguageKeysCount] = {\n"

VAL=
while IFS= read -r LINE || [ -n "${LINE}" ]; do
	if [ "${LINE:0:1}" == ";" ]; then
		continue;
	fi
	IFS='=' read -r -a PARTS <<< "$LINE"
	PART_COUNT=${#PARTS[@]}
	
	if [[ $PART_COUNT == 1 && ${PARTS[0]} == "CJK" ]]; then
		((KEYS_COUNT+=1))
		HEADER+="\tchar* ${PARTS[0]};\n"
		KEYS+="\t\"${PARTS[0]}\",\n"
		DEFAULT+="\t.${PARTS[0]}=NULL,\n"
	elif [ $PART_COUNT == 2 ]; then
		if [ ! -z "$VAL" ]; then
			((KEYS_COUNT+=1))
			VAL=$(echo $VAL | sed 's/\(\\n\)*$//')
			DEFAULT+="\t$VAL\",\n"
		fi
		
		HEADER+="\tchar* ${PARTS[0]};\n"
		KEYS+="\t\"${PARTS[0]}\",\n"
		
		VAL=.${PARTS[0]}=\"
		VAL+=${PARTS[1]}
	elif [[ ! -z "$VAL" && ! -z "$LINE" ]]; then
		VAL+="\\\n"$LINE
	fi
done < $INPUT
if [ ! -z "$VAL" ]; then
	((KEYS_COUNT+=1))
	VAL=$(echo $VAL | sed 's/\(\\n\)*$//')
	DEFAULT+="\t$VAL\",\n"
fi
DEFAULT+="};\n\n"
KEYS+="};\n\n"

DEFAULT+="#define kLanguageKeysCount $KEYS_COUNT\n"
DEFAULT+=$KEYS

DEFAULT+="#endif\n"

HEADER+="} Language;\n\n"
HEADER+="void InitLanguage(Language* language);\n"
HEADER+="void QuitLanguage(void);\n"
HEADER+="void ResetLanguage(void);\n"
HEADER+="#endif\n"

printf "$HEADER" > ./mlanguage.h
printf "$DEFAULT" > ./mlanguage_base.h