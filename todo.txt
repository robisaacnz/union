excuse the mess, this needs some serious pruning...

NEXT:
	pause trimui/rg350 (mini really replaces both in my mind)
	pokemini
		hook up SDLK_ESCAPE & SDLK_POWER to menu
	bring GBA (back) to trimui/rg350

finish stubbing out skeleton and the root makefile

make Union.sh an installer on rg350
	- and only install on stock OpenDingux

figure out cross platform update mechanism
	- just replace .system wholesale?
	- what if the user has added languages? or deleted unused platforms?

figure out how to organize this document
	by platform?
	by console?
	by repo?

libmmenu
	needs to handle 1x and 2x previews on platforms that support both
	needs to handle 2x lcd scaling that produces all red preview images
		emulators can provide an optional full screen surface for a preview image
			use to remove scaling effects and/or filters for better resizing

Game Boy
	shared
		origin	 https://github.com/shauninman/union-gambatte-dms (union)
		upstream https://github.com/SnDream/gambatte-dms (master-rs90)
	trimui
		origin	 https://github.com/shauninman/gambatte-dms (union-trimui)
		upstream https://github.com/bardeci/gambatte-dms

	want to separate 2x and 1x defaults settings (2x should get the cool ones!)

Game Boy Advance
	miyoomini/trimui
		origin   https://github.com/shauninman/picogpsp (union-miyoomini)
		upstream https://git.crowdedwood.com/picogpsp/ (pico-fe)

Pok√©mon mini
	
	
Nintendo
	
	
Super NES
	
	
PlayStation
	
	









trimui
	figure out why the platform/trimui/skin directory doesn't exist on the trimui-model-s branch of picodrive
		or just use alternate one it was copied from

miyoo
	menu + power to kill foreground application
	hold power to power off ala rg350 family
		that's a non-trivial change :sweat_smile:
		but worth doing
		no uinput :sob:
	recent.txt randomly getting nuked
		possibly only when force to cut power?
		or if I return to the main menu with no sd inserted?
			no that's not it
	gambatte
		
why is initPlatform in common.h and not platform.h (it's implemented in platform.c so...)


NOTE: platform is still determined at compile time, only SDCARD_PATH, SCREEN_WIDTH, and SCREEN_HEIGHT are really determined at runtime!

- shell script to copy updated builds to SD card

- figure out how to handle supporting multiple resolutions on the same platform in emulators
	- scalers by resolution?
		- 640x480 has more interesting options available than 320x240
		- maybe just separate preferences by resolution?
	- another wrinkle: previews when sharing between a 1x and 2x device on the same platform...
		- flag a platform for having multiple resolutions and save the preview at both sizes? eg. 320x240 and 160x120?
			- lower res devices only need to scale once
			- higher res devices need to scale twice
	
	- in gambatte on odbeta I split out scaler into separate dmg and gbc scalers
		- port back to rg350? yes, well, no. not a port, stock and odbeta should share the same source
	- in gambatte the weird resolutions + IPU scaling cause mmenu issues on 640x480 screens (not an issue at 320x240)
		- limit options by resolution, don't use IPU
		- 1x, 2x, 3x
	- retroarch is getting more and more appealing...port picoarch?
- tweak text alignment per platform

- create the Union.sh launch installer
	- Trimui/Mini don't need one, they have .tmp_update on SD
	- RG300 has /home/retrofw
	- I think RS-90 (and regular odbeta?) can use /etc/hostname?
	- stock od by process of elimination?
- make Union/MinUI logo a toggle?
- add RGB10 Max 2 support (854x480)
	same vertical alignments as 640x480
	just make sure edge pinning is setup correctly for horizontal alignments

- force nearest neighbor on od stock/beta?
	- see https://git.libretro.com/libretro/RetroArch/-/blob/master/dingux/dingux_utils.c
	- set to 0 for nn
		stock: 	/sys/devices/platform/jz-lcd.0/sharpness_upscaling
		beta:	SDL_VIDEO_KMSDRM_SCALING_SHARPNESS

BUILDING GAMBATTE
	PLATFORM=gcw0 ./build_minui.sh
	PLATFORM=miyoomini ./build_minui.sh
	make (trimui)

BUILDING PICOGPSP
	make -f Makefile.miyoomini

SUBPIXEL SIMULATION SCALERS
	subpixel separation is pretty simple in Photoshop
		1. duplicate your layer three times, name each red, green, blue
		2. adjust the Curves to remove the other two colors, eg. remove green and blue from red, etc
		3. mask with your subpixel shape
		4. fill excess with black




removing submodules:
	git submodule deinit <path_to_submodule>
	git rm <path_to_submodule>
	rm -rf .git/modules/<path_to_submodule>